// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: game.proto

package cn.teamthevoid.AiTankArenaServer.message.operation;

/**
 * <pre>
 * 玩家类型
 * </pre>
 * <p>
 * Protobuf enum {@code AiTankArenaServer.PlayerType}
 */
public enum PlayerType
        implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     *能够行动的坦克操作者 一般为AI
     * </pre>
     *
     * <code>WARRIOR = 0;</code>
     */
    WARRIOR(0),
    /**
     * <pre>
     *不能行动的观察者
     * </pre>
     *
     * <code>OBSERVER = 1;</code>
     */
  OBSERVER(1),
  UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     *能够行动的坦克操作者 一般为AI
     * </pre>
     *
     * <code>WARRIOR = 0;</code>
     */
  public static final int WARRIOR_VALUE = 0;
    /**
     * <pre>
     * 不能行动的观察者
     * </pre>
     *
     * <code>OBSERVER = 1;</code>
     */
    public static final int OBSERVER_VALUE = 1;
    private static final com.google.protobuf.Internal.EnumLiteMap<
            PlayerType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<PlayerType>() {
                public PlayerType findValueByNumber(int number) {
                    return PlayerType.forNumber(number);
                }
            };

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static PlayerType valueOf(int value) {
        return forNumber(value);
    }

    private static final PlayerType[] VALUES = values();
    private final int value;

    private PlayerType(int value) {
        this.value = value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static PlayerType forNumber(int value) {
        switch (value) {
            case 0:
                return WARRIOR;
            case 1:
                return OBSERVER;
            default:
                return null;
        }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<PlayerType>
    internalGetValueMap() {
        return internalValueMap;
    }

    public static final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptor() {
        return cn.teamthevoid.AiTankArenaServer.message.operation.Game.getDescriptor().getEnumTypes().get(0);
    }

    public static PlayerType valueOf(
            com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
            throw new java.lang.IllegalArgumentException(
                    "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
            return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
  }

  public final int getNumber() {
    if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
                "Can't get the number of an unknown enum value.");
    }
      return value;
  }

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
    getValueDescriptor() {
        return getDescriptor().getValues().get(ordinal());
    }

    public final com.google.protobuf.Descriptors.EnumDescriptor
    getDescriptorForType() {
    return getDescriptor();
  }

  // @@protoc_insertion_point(enum_scope:AiTankArenaServer.PlayerType)
}

